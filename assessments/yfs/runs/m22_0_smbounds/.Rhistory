a_all70=7.426e-06;b_all70=3.075
lines(seq(1,1200,1),(a_all70*seq(1,1200,1)^b_all70)/1000,lwd=2,lty=1,col="green")
x=wtageyr$Length[which(wtageyr$Year<1990&wtageyr$Year>1980&wtageyr$Sex==2)]
y=wtageyr$Weight[which(wtageyr$Year<1990&wtageyr$Year>1980&wtageyr$Sex==2)];length(y)
M1980=nls(y~a*x^b,start=list(a=.003915,b=3.2232))
a_all80=6.610e-06;b_all80=3.104
points(x,y/1000,col="blue")
lines(seq(1,1200,1),(a_all80*seq(1,1200,1)^b_all80)/1000,lwd=2,lty=1,col="blue")
x=wtageyr$Length[which(wtageyr$Year<2000&wtageyr$Year>1990&wtageyr$Sex==2)]
y=wtageyr$Weight[which(wtageyr$Year<2000&wtageyr$Year>1990&wtageyr$Sex==2)];length(y)
M1990=nls(y~a*x^b,start=list(a=.003915,b=3.2232))
a_all90=1.793e-06;b_all90=3.320
points(x,y/1000,col="orange")
lines(seq(1,1200,1),(a_all90*seq(1,1200,1)^b_all90)/1000,lwd=2,lty=1,col="orange")
x=wtageyr$Length[which(wtageyr$Year<2010&wtageyr$Year>2000&wtageyr$Sex==2)]
y=wtageyr$Weight[which(wtageyr$Year<2010&wtageyr$Year>2000&wtageyr$Sex==2)];length(y)
M2000=nls(y~a*x^b,start=list(a=.003915,b=3.2232))
a_all2000=3.479e-06;b_all2000=3.211
points(x,y/1000,col="red")
lines(seq(1,1200,1),(a_all2000*seq(1,1200,1)^b_all2000)/1000,lwd=2,lty=1,col="red")
x=wtageyr$Length[which(wtageyr$Year>2010&wtageyr$Sex==2)]
y=wtageyr$Weight[which(wtageyr$Year>2010&wtageyr$Sex==2)];length(y)
M2010=nls(y~a*x^b,start=list(a=.003915,b=3.2232))
a_all2010=4.198e-06;b_all2010=3.182
points(x,y/1000,col="purple")
lines(seq(1,1200,1),(a_all2010*seq(1,1200,1)^b_all2010)/1000,lwd=2,lty=1,col="purple")
legend("topleft",c("1970's","1980's","1990's","2000's","2020's"),col=c("green","blue","orange","red","purple"),pch=c(-1,-1,-1,-1,-1),lty=c(1,1,1,1,1),lwd=2,cex=1.2,bty="n")
x=wtageyr$Length[which(wtageyr$Sex==2)]#Females
y=wtageyr$Weight[which(wtageyr$Sex==2)]#Females
#x=wtageyr$Length
#y=wtageyr$Weight
plot(x,y/1000,col="grey",xlab="Length (mm)",ylab="Weight (g)",las=1,cex.lab=1.4,cex.axis=1.2)
#text(200,5,"Growth in first year \nof very small ones \nis strange - \nunits error?")
lines(seq(1,1200,1),(a_all70*seq(1,1200,1)^b_all70)/1000,lwd=2,lty=1,col="green")
lines(seq(1,1200,1),(a_all80*seq(1,1200,1)^b_all80)/1000,lwd=2,lty=1,col="blue")
lines(seq(1,1200,1),(a_all90*seq(1,1200,1)^b_all90)/1000,lwd=2,lty=1,col="orange")
lines(seq(1,1200,1),(a_all2000*seq(1,1200,1)^b_all2000)/1000,lwd=2,lty=1,col="red")
lines(seq(1,1200,1),(a_all2010*seq(1,1200,1)^b_all2010)/1000,lwd=2,lty=1,col="purple")
x=wtageyr$Length[which(wtageyr$Sex==1)]
y=wtageyr$Weight[which(wtageyr$Sex==1)]
points(x,y/1000,col="black")
plot(x,y/1000,col="grey",xlab="Length (mm)",ylab="Weight (g)",las=1,cex.lab=1.4,cex.axis=1.2)
#text(200,5,"Growth in first year \nof very small ones \nis strange - \nunits error?")
lines(seq(1,1200,1),(a_all70*seq(1,1200,1)^b_all70)/1000,lwd=2,lty=1,col="green")
lines(seq(1,1200,1),(a_all80*seq(1,1200,1)^b_all80)/1000,lwd=2,lty=1,col="blue")
lines(seq(1,1200,1),(a_all90*seq(1,1200,1)^b_all90)/1000,lwd=2,lty=1,col="orange")
lines(seq(1,1200,1),(a_all2000*seq(1,1200,1)^b_all2000)/1000,lwd=2,lty=1,col="red")
lines(seq(1,1200,1),(a_all2010*seq(1,1200,1)^b_all2010)/1000,lwd=2,lty=1,col="purple")
x=wtageyr$Length[which(wtageyr$Sex==2)]
y=wtageyr$Weight[which(wtageyr$Sex==2)]
x=wtageyr$Length[which(wtageyr$Sex==2)]#Females
y=wtageyr$Weight[which(wtageyr$Sex==2)]#Females
#x=wtageyr$Length
#y=wtageyr$Weight
plot(x,y/1000,col="grey",xlab="Length (mm)",ylab="Weight (g)",las=1,cex.lab=1.4,cex.axis=1.2)
#text(200,5,"Growth in first year \nof very small ones \nis strange - \nunits error?")
lines(seq(1,1200,1),(a_all70*seq(1,1200,1)^b_all70)/1000,lwd=2,lty=1,col="green")
lines(seq(1,1200,1),(a_all80*seq(1,1200,1)^b_all80)/1000,lwd=2,lty=1,col="blue")
lines(seq(1,1200,1),(a_all90*seq(1,1200,1)^b_all90)/1000,lwd=2,lty=1,col="orange")
lines(seq(1,1200,1),(a_all2000*seq(1,1200,1)^b_all2000)/1000,lwd=2,lty=1,col="red")
lines(seq(1,1200,1),(a_all2010*seq(1,1200,1)^b_all2010)/1000,lwd=2,lty=1,col="purple")
#x=wtageyr$Length[which(wtageyr$Sex==2)]
#y=wtageyr$Weight[which(wtageyr$Sex==2)]
#points(x,y/1000,col="black")
legend("topleft",c("1970's","1980's","1990's","2000's","2020's","Raw Data (Females)","Raw Data (Males)"),col=c("green","blue","orange","red","purple","grey","black"),pch=c(-1,-1,-1,-1,-1,20,20),lty=c(1,1,1,1,1,-1,-1),lwd=2,cex=1.2,bty="n")
#x=wtageyr$Length[which(wtageyr$Sex==2)]
#y=wtageyr$Weight[which(wtageyr$Sex==2)]
#points(x,y/1000,col="black")
legend("topleft",c("1970's","1980's","1990's","2000's","2020's","Raw Data (Females)"),col=c("green","blue","orange","red","purple","grey"),pch=c(-1,-1,-1,-1,-1,20,lty=c(1,1,1,1,1,-1),lwd=2,cex=1.2,bty="n")
plot(x,y/1000,col="grey",xlab="Length (mm)",ylab="Weight (g)",las=1,cex.lab=1.4,cex.axis=1.2)
#x=wtageyr$Length[which(wtageyr$Sex==2)]
#y=wtageyr$Weight[which(wtageyr$Sex==2)]
#points(x,y/1000,col="black")
legend("topleft",c("1970's","1980's","1990's","2000's","2020's","Raw Data (Females)"),col=c("green","blue","orange","red","purple","grey"),pch=c(-1,-1,-1,-1,-1,20),lty=c(1,1,1,1,1,-1),lwd=2,cex=1.2,bty="n")
plot(x,y/1000,col="grey",xlab="Length (mm)",ylab="Weight (g)",las=1,cex.lab=1.4,cex.axis=1.2)
#text(200,5,"Growth in first year \nof very small ones \nis strange - \nunits error?")
lines(seq(1,1200,1),(a_all70*seq(1,1200,1)^b_all70)/1000,lwd=2,lty=1,col="green")
lines(seq(1,1200,1),(a_all80*seq(1,1200,1)^b_all80)/1000,lwd=2,lty=1,col="blue")
lines(seq(1,1200,1),(a_all90*seq(1,1200,1)^b_all90)/1000,lwd=2,lty=1,col="orange")
lines(seq(1,1200,1),(a_all2000*seq(1,1200,1)^b_all2000)/1000,lwd=2,lty=1,col="red")
lines(seq(1,1200,1),(a_all2010*seq(1,1200,1)^b_all2010)/1000,lwd=2,lty=1,col="purple")
#x=wtageyr$Length[which(wtageyr$Sex==2)]
#y=wtageyr$Weight[which(wtageyr$Sex==2)]
#points(x,y/1000,col="black")
legend("topleft",c("1970's","1980's","1990's","2000's","2020's","Raw Data (Females)"),col=c("green","blue","orange","red","purple","grey"),pch=c(-1,-1,-1,-1,-1,20),lty=c(1,1,1,1,1,-1),lwd=2,cex=1.2,bty="n")
70+319+4+117+2+1
length(seq(1954,2022))
length(seq(1954,2020))
68*3
68*4
68*5
68*4
70+325+4+117+2+1
514-509
68 + 317 + 4 + 115 + 2 + 1
68 + 326 + 4 + 115 + 2 + 1
68 + 328 + 4 + 115 + 2 + 1
68 + 326 + 4 + 115 + 2 + 1
68 + 330 + 4 + 115 + 2 + 1
70*4
70*5
length(seq(1954,2022))
69*4
277
YFS18_2$natmort_m
YFS18_2$natmort_f
YFS22_1$natage_f
YFS22_1$natmort_f
YFS22_1$natmort_m
YFS22_0$natmort_m
YFS22_0$natmort_f
## Define the path and model name
m <- './fm_bnds'                               # model name
p <- '/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m22_0_smbounds/'                                   # path to model
## Assumes current working directory is where this R script is
setwd("/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m22_0_smbounds")
(wd <- getwd())
## It also assumes the model was optimized with successful
## inversion of the matrix to create the admodel.cov file. If not
## rerun it.
setwd(p)
## system(paste(m, '-nox -iprint 1000'))
## If an SS model better to optimize with -mcmc flag
system(paste(m, '-nox -iprint 1000 -mcmc 10'))
setwd(wd)
(chains <- parallel::detectCores()-1)
fit <- sample_rwm(model=m, path=p, iter=iter, warmup=iter/4,
chains=chains, thin=thin)#This one takes a while
YFS22_0=read.rep("/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m22_0/fm.rep")#last years model
YFS22_1=read.rep("/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m22_1/fm.rep")#last years model
YFS18_2=read.rep("/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m18_2/fm.rep")#this is the preferred model. Male M is estimated.
df <- data.frame(rowSums(YFS18_2$natage_f)/rowSums(YFS18_2$natage_f+YFS18_2$natage_m))
df$Model <- "Model 18.2"
df$Year=YFS18_2$Yr
colnames(df)=c("Sex_Ratio","Model","Year")
df1 <- data.frame(rowSums(YFS22_1$natage_f)/rowSums(YFS22_1$natage_f+YFS22_1$natage_m))
df1$Model <- "Model 22.1"
df1$Year=YFS22_1$Yr
df2 <- data.frame(rowSums(YFS22_0$natage_f)/rowSums(YFS22_0$natage_f+YFS22_0$natage_m))
df2$Model <- "Model 22.0"
df2$Year=YFS22_0$Yr
colnames(df1)=c("Sex_Ratio","Model","Year")
df3=rbind(df1,df,df2)
df2 <- data.frame(rowSums(YFS18_2$natage_f)/rowSums(YFS18_2$natage_f+YFS18_2$natage_m))
df2$Model <- "Model 18.2"
df2$Year=YFS18_2$Yr
colnames(df2)=c("Sex_Ratio","Model","Year")
df1 <- data.frame(rowSums(YFS22_1$natage_f)/rowSums(YFS22_1$natage_f+YFS22_1$natage_m))
df1$Model <- "Model 22.1"
df1$Year=YFS22_1$Yr
df0 <- data.frame(rowSums(YFS22_0$natage_f)/rowSums(YFS22_0$natage_f+YFS22_0$natage_m))
df0$Model <- "Model 22.0"
df0$Year=YFS22_0$Yr
df3=rbind(df2,df1,df0)
colnames(df1)=c("Sex_Ratio","Model","Year")
colnames(df0)=c("Sex_Ratio","Model","Year")
df3=rbind(df2,df1,df0)
ggplot(df3) + geom_point(data=df3, aes(x = Year, y = Sex_Ratio,color=Model),size=3)+labs(xlab = "Year", ylab = "Proportion female")+
ylab("Proportion Female")+theme_bw()
#this pulls out the hessian and then transforms it into parameter space
dir1="/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m18_2/"#663 pars
dir2="/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m22_0/"  #661 pars
dir1 #m18_2
NLL=1345.22761816118 #objective function?
num.pars=520
#setwd("/Users/ingridspies/admbmodels/Katch/assessments/GOA_ATF/runs/m2/")
HESS = get.admb.hes()
get.admb.hes <- function(model.path=getwd()){
wd.old <- getwd(); on.exit(setwd(wd.old))
setwd(model.path)
filename <- file("admodel.hes", "rb")
on.exit(close(filename), add=TRUE)
num.pars <- readBin(filename, "integer", 1)
hes.vec <- readBin(filename, "numeric", num.pars^2)
hes <- matrix(hes.vec, ncol=num.pars, nrow=num.pars)
hybrid_bounded_flag <- readBin(filename, "integer", 1)
scale <- readBin(filename, "numeric", num.pars)
result <- list(num.pars=num.pars, hes=hes,
hybrid_bounded_flag=hybrid_bounded_flag, scale=scale)
return(result)
}
#setwd("/Users/ingridspies/admbmodels/Katch/assessments/GOA_ATF/runs/m2/")
HESS = get.admb.hes()
# Calculate Hessian
cov <- pseudoinverse(HESS$hes)
library(r4ss);library(corpcor) #first get these libraries
install.packages("corpcor",repos="https://cloud.r-project.org",dependencies=TRUE)
install.packages("corpcor", repos = "https://cloud.r-project.org", dependencies = TRUE)
#source code - use this function.
get.admb.hes <- function(model.path=getwd()){
wd.old <- getwd(); on.exit(setwd(wd.old))
setwd(model.path)
filename <- file("admodel.hes", "rb")
on.exit(close(filename), add=TRUE)
num.pars <- readBin(filename, "integer", 1)
hes.vec <- readBin(filename, "numeric", num.pars^2)
hes <- matrix(hes.vec, ncol=num.pars, nrow=num.pars)
hybrid_bounded_flag <- readBin(filename, "integer", 1)
scale <- readBin(filename, "numeric", num.pars)
result <- list(num.pars=num.pars, hes=hes,
hybrid_bounded_flag=hybrid_bounded_flag, scale=scale)
return(result)
}
#this pulls out the hessian and then transforms it into parameter space
dir1="/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m18_2/"#663 pars
setwd(dir1)
#setwd("/Users/ingridspies/admbmodels/Katch/assessments/GOA_ATF/runs/m2/")
HESS = get.admb.hes()
# Calculate Hessian
cov <- pseudoinverse(HESS$hes)
scale <- HESS$scale
cov.bounded <- cov*(scale %o% scale)
Hess = pseudoinverse(cov.bounded)
Hess
NLL=1345.22761816118 #objective function?
num.pars=520
LnDet = determinant(Hess, logarithm=TRUE)$modulus[[1]]
Ln_Integral = log(2*pi) + (-1/2)*sum(LnDet) + -1*NLL#this is the MARGINAL likelihood
AIC = -2*Ln_Integral + 2*num.pars;AIC
dir2="/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m22_0/"  #661 pars
setwd(dir2)
#setwd("/Users/ingridspies/admbmodels/Katch/assessments/GOA_ATF/runs/m2/")
HESS = get.admb.hes()
# Calculate Hessian
cov <- pseudoinverse(HESS$hes)
scale <- HESS$scale
cov.bounded <- cov*(scale %o% scale)
Hess = pseudoinverse(cov.bounded)
NLL=1345.46098106037 #objective function?
num.pars=518
LnDet = determinant(Hess, logarithm=TRUE)$modulus[[1]]
Ln_Integral = log(2*pi) + (-1/2)*sum(LnDet) + -1*NLL#this is the MARGINAL likelihood
AIC = -2*Ln_Integral + 2*num.pars;AIC
FSB_this22_0=1000*ABC_OFL22_0$SSB[1]
AIC=6154.081
YFS22_1$natmort_m
YFS22_0$natmort_m
YFS18_2$natmort_m
YFS18_2$Bottom_temp
round(YFS18_2$q[40,2],2)
round(YFS22_1$q[40,2],2)
round(YFS22_0$q[40,2],2)
dim(YFS18_2$F_m)
r thisyr-4
thisyr-4
round(mean(YFS22_0$q[,2]),2)
round(mean(YFS22_1$q[,2]),2)
mean(YFS22_1$q[,2])
round(mean(YFS22_0$q[,2]),1)
round(mean(YFS22_1$q[,2]),1)
formatC(YFS22_1$TotBiom[69,2],format="d",big.mark=".")
YFS22_1$TotBiom
YFS22_1$q_srv
YFS22_0$q_srv
round(mean(YFS18_2$q[,2]),2)
round(mean(YFS22_0$q[,2]),2)
round(YFS22_1$TotBiom[69,2]/YFS18_2$TotBiom[32,2],2)
formatC(1000*YFS22_1$SSB[69,2],format="d",big.mark=",")
thisyr-9
thisyr-6
100*(1-round(ABC_this/OFL_this,2))
formatC(OFL_this-ABC_this,format="d",big.mark=",")
#Here calculate fishing mortality rate for this years model that would have resulted in the ofl for last year, based on this years estimates of last years stock.
#True OFL in thisyr=1 ABCOFL[42,4]
ABCOFL=read.csv("/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/doc/2022/YFS_ABCOFL.csv",header=TRUE)
#Here calculate fishing mortality rate for this years model that would have resulted in the ofl for last year, based on this years estimates of last years stock.
#True OFL in thisyr=1 ABCOFL[42,4]
ABCOFL=read.csv("/Users/ingridspies/Downloads/WorkDellStuff/Assessments/YFS/2022/YFS_ABCOFL.csv",header=TRUE)
#Here calculate fishing mortality rate for this years model that would have resulted in the ofl for last year, based on this years estimates of last years stock.
#True OFL in thisyr=1 ABCOFL[42,4]
ABCOFL=read.csv("/Users/ingridspies/Documents/WorkDellStuff/Assessments/YFS/2022/YFS_ABCOFL.csv",header=TRUE)
ABCOFL
OFL_last=as.numeric(gsub(",","",ABCOFL[mrpw(ABCOFL),4]))
as.numeric(gsub(",","",ABCOFL[(ABCOFL),4]))
as.numeric(gsub(",","",ABCOFL[mrpw(ABCOFL),4]))
library(magick)
as.numeric(gsub(",","",ABCOFL[mrpw(ABCOFL),4]))
library(scales)
as.numeric(gsub(",","",ABCOFL[mrpw(ABCOFL),4]))
library(widyr)
library(widyr)
#install.packages("formattable")
#install.packages("formattable")
library(flextable)
as.numeric(gsub(",","",ABCOFL[mrpw(ABCOFL),4]))
library(officer)
as.numeric(gsub(",","",ABCOFL[mrpw(ABCOFL),4]))
library(reshape2)
as.numeric(gsub(",","",ABCOFL[mrpw(ABCOFL),4]))
OFL_last=as.numeric(gsub(",","",ABCOFL[nrow(ABCOFL),4]))
n=seq(100,670,999)
wt=seq(1,2,4)
n*wt
n=c(100,670,999)
wt=c(1,2,4)
n*wt
sel=c(.3.5.99)
sel=c(.3,.5,.99)
sel*n
(sel*n*wt)/sum(n)
sel*n*wt
sum((sel*n*wt)/sum(n))
#Here calculate fishing mortality rate for this years model that would have resulted in the ofl for last year, based on this years estimates of last years stock.
#True OFL in thisyr=1 ABCOFL[42,4]
ABCOFL=read.csv("/Users/ingridspies/Documents/WorkDellStuff/Assessments/YFS/2022/YFS_ABCOFL.csv",header=TRUE)
OFL_last=as.numeric(gsub(",","",ABCOFL[nrow(ABCOFL),4]))
OFL_last
ABCOFL
catageF=vector();catageM=vector()
dim(YFS22_1$natage_f)
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
#Based on thisyr model, want to calculate FOFL that would have produced a 2021 catch equal to the 2021 OFL.
FOFL=.19464 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#341,571
OFL_last=as.numeric(gsub(",","",ABCOFL[nrow(ABCOFL),4])) #This is for the current year.
OFL_last
#Based on thisyr model, want to calculate FOFL that would have produced a 2021 catch equal to the 2021 OFL.
FOFL=.2 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6
OFL_last
FOFL=.21 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
FOFL=.202 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
FOFL=.2015 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
FOFL=.2012 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
FOFL=.2010 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
ABCOFL=read.csv("/Users/ingridspies/Documents/WorkDellStuff/Assessments/YFS/2022/YFS_ABCOFL.csv",header=TRUE)
OFL_last=as.numeric(gsub(",","",ABCOFL[nrow(ABCOFL),4])) #This is for the current year.
#Based on thisyr model, want to calculate FOFL that would have produced a 2021 catch equal to the 2021 OFL.
FOFL=.20095 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
FOFL=.20099 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
FOFL=.20095 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
FOFL=.20098 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
#calculate the weight of the fish caught at each age at a certain fishing mortality rate (FOFL) and want to match last years OFL.
#so use this years estimate of last years weight and selectivity
#units: numbers are divided by 1 billion
FOFL=.20097 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
FOFL=.200975 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
#calculate the weight of the fish caught at each age at a certain fishing mortality rate (FOFL) and want to match last years OFL.
#so use this years estimate of last years weight and selectivity
FOFL=.200974 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
FOFL=.2009725 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
FOFL=.2009724 #should setup optim.
catageF=vector();catageM=vector()
for(i in 1:20){
catageF[i]=(1e3*YFS22_1$natage_f[68,i]*YFS22_1$wt_pop_f[68,i]*YFS22_1$sel_fsh_f[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_f[68,i])+YFS22_1$natmort_f)*(1-exp((-FOFL*YFS22_1$sel_fsh_f[68,i])-YFS22_1$natmort_f))
catageM[i]=(1e3*YFS22_1$natage_m[68,i]*YFS22_1$wt_pop_m[68,i]*YFS22_1$sel_fsh_m[68,i]*FOFL)/((FOFL*YFS22_1$sel_fsh_m[68,i])+YFS22_1$natmort_m)*(1-exp((-FOFL*YFS22_1$sel_fsh_m[68,i])-YFS22_1$natmort_m))
}
sum(catageF)+sum(catageM)#366139.6  #aiming for 377014
OFL_last
formatC(OFL_last,big.mark=",",format="d")
56*5*249
m <- './fm_bnds'                               # model name
p <- '/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m22_0_smbounds/'                                   # path to model
## Assumes current working directory is where this R script is
setwd("/Users/ingridspies/admbmodels/BSAI_YFS/assessments/yfs/runs/m22_0_smbounds")
(wd <- getwd())
## It also assumes the model was optimized with successful
## inversion of the matrix to create the admodel.cov file. If not
## rerun it.
setwd(p)
## system(paste(m, '-nox -iprint 1000'))
## If an SS model better to optimize with -mcmc flag
system(paste(m, '-nox -iprint 1000 -mcmc 10'))
setwd(wd)
(chains <- parallel::detectCores()-1)
set.seed(1234)#1 and 100 and 1234 failed on 22_0
thin <- 10000#10000
iter <- 1000*thin#1000*thin
fit <- sample_rwm(model=m, path=p, iter=iter, warmup=iter/4,
chains=chains, thin=thin)#This one takes a while
alt12=read.table("/Users/ingridspies/admbmodels/projection/bsai_yfin2021_out/alt12.csv",header=TRUE,sep=",");colnames(alt12)=c("","Year","FSB","Catch","F")
saveRDS(fit, 'm22_0_smboundsLARGE.RDS')
## Key information from run. Including the two recommended
## convergence diagnostics:
fit <- readRDS('m22_0_smboundsLARGE.RDS')
summary(fit)
## Stored internally like this but you rarely need to access
## these.
fit$monitor[1:5, c('n_eff', 'Rhat')]
## If more thinning is needed, increase and rerun. Good idea to
## save the output, I recommend RDS format.
saveRDS(fit, file='fits/myfit.RDS')
## If more thinning is needed, increase and rerun. Good idea to
## save the output, I recommend RDS format.
saveRDS(fit, file='fits/myfit.RDS')
fit$cmd[1]
## The 5 slowest/fastest mixing parameters
pairs_admb(fit, pars=1:10)
pairs_admb(fit, pars=1:10, order='slow')
pairs_admb(fit, pars=1:10, order='fast')
pairs_admb(fit, pars=1:10, order='slow')
pairs_admb(fit, pars=1:10, order='slow')
pairs_admb(fit, pars=1:10, order='slow')
pairs_admb(fit, pars=1:10, order='fast')
## Can also specify names or use grep
par.names <- dimnames(fit$samples)[[3]]
pairs_admb(fit, pars=grep('log_rec_dev', par.names)[64:68])
fit$cmd[1]
3421.52+3366.19+7178.36
3175.97+1588.48+5782.67
## Key information from run. Including the two recommended
## convergence diagnostics:
fit <- readRDS('m22_0_smboundsLARGE.RDS')
summary(fit)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
knitr::opts_chunk$set(fig.align = 'left')
knitr::opts_chunk$set(fig.pos = 'H')
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache=FALSE,results="asis")
#`r opts_chunk$set(cache=TRUE)`
f.ref <- function(x) {
stringr::str_extract(table_nums(x), "[^:]*")
}
table_nums <- captioner::captioner(prefix = "Table 2A.",levels=1,auto_space = FALSE)
figure_nums <- captioner::captioner(prefix="Figure 2A.",levels = 1, auto_space = FALSE)
thisyr    = 2022
lastyr    = thisyr-1
nextyr    = thisyr+1
hist=read.csv("/Users/ingridspies/Documents/WorkDellStuff/Assessments/AI_Cod/2022/AIcatch_1964_1980.csv",header=TRUE)
catch81_90=read.csv("/Users/ingridspies/Documents/WorkDellStuff/Assessments/AI_Cod/2020/Catch_1981_1990.csv",header=TRUE)
catch81_90=read.csv("/Users/ingridspies/Documents/WorkDellStuff/Assessments/AI_Cod/2022/Catch_1981_1990.csv",header=TRUE)
